

$(function(){

  var url = 'js/landings.json';
                var landings = [];
                var year = [];
                var pounds = [];
                var dollars = [];

                $.ajax({
                  type: 'GET',
                  dataType: 'json',
                  data: landings,
                  url: url,
                  async: true,
                  success: function(landings){
                    console.log(landings);

                    for (i=0; i < landings.length; i++){
                      if(landings[i].Species == 'TOTAL'){
                      year.push(landings[i].Year);
                      pounds.push(landings[i].Pounds);
                      dollars.push(landings[i].Dollars);
                    }
                    }//for loop
                    buildChart1();

                  } //success

                });//ajax


      function buildChart1(){
                Highcharts.chart('landings', {

                    chart: {
                        type: 'line'
                    },

                    data: landings,

                    title: {
                        text: 'Annual Seafood Catch in N.C.'
                    },

                    subtitle: {
                        text: 'Source: NOAA Fisheries'
                    },

                    xAxis: [{
                        title: {
                            text: 'Year'
                        },
                        categories: year
                      }],

                    yAxis: [{ // left y axis
                        title: {
                            text: 'Total Annual Landings'
                        },
                        labels: {
                            align: 'left',
                            x: 3,
                            y: 16,
                            format: '{value:.,0f}'
                        },
                        showFirstLabel: false
                    }, { // right y axis
                        linkedTo: 0,
                        gridLineWidth: 0,
                        opposite: true,
                        title: {
                            text: null
                        },
                        labels: {
                            align: 'right',
                            x: -3,
                            y: 16,
                            format: '{value:.,0f}'
                        },
                        showFirstLabel: false
                    }],

                    legend: {
                        align: 'left',
                        verticalAlign: 'top',
                        borderWidth: 0
                    },

                    tooltip: {
                        shared: true,
                        crosshairs: true
                    },

                    plotOptions: {
                        series: {

                        }
                    },

                    series: [{
                        name: 'Total Pounds',
                        data: pounds
                    }, {
                        name: 'Total U.S. Dollars',
                        data: dollars
                    }],

            });

}//end buildChart1


//MAP ------------------------------------------------------
               var map = L.map('mapid').setView([35.3433523, -80.0866785], 6.5); // YOU CAN CHANGE THE ZOOM

               // this line is creating the variable map by initializing the L.map class (a
               // Leaflet class) with the mapid element that we created before. setView is a method
               // that can be applied to the class L.map : you can give it a latitude, longitude
               // and a zoom. The higher the value of the zoom, the finer the initial scale of the
               // map.
               L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x}', {
                attribution: 'Tiles &copy; Esri &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri'
               }).addTo(map);


               // L.tileLayer can display a tile layer. You can check out other tile layer
               //examples at https://leaflet-extras.github.io/leaflet-providers/preview/. The
               //location of the tile layer needs to be in single quotes. You can also indicate
               //the attribution for that layer. In this example we used the Open StreetMap
               //attribution. The '&copy; <a> and the other information you see here is HTML code
               //adding a copyright sign, and making a hyperlink to OpenStreetMap.
               // At the end we include .addTo(map), which is indicating to add the tile layer
               //to the variable map.


                L.marker([35.9133401, -79.0551539]).addTo(map)
                 .bindPopup('Urban: Chapel Hill')
                 .on('click', function(){
                   $('#pano1').css({'display':'flex'});
                   $('#pano2').css({'display':'none'});
                      $('#pano3').css({'display':'none'});
                        $('#pano').css({'display':'none'});
                  });

               L.marker([34.6626924, -78.6264525]).addTo(map)
                  .bindPopup('Agriculture: Bladen County')
                  .on('click', function(){
                    $('#pano2').css({'display':'flex'});
                     $('#pano1').css({'display':'none'});
                        $('#pano3').css({'display':'none'});
                          $('#pano').css({'display':'none'});

                   });

                  L.marker([33.8774832, -78.0019814]).addTo(map)
                   .bindPopup('Coast: Bald Head Island')
                   .on('click', function(){
                     $('#pano3').css({'display':'flex'});
                     $('#pano1').css({'display':'none'});
                        $('#pano2').css({'display':'none'});
                          $('#pano').css({'display':'none'});
                    });



                // create a red polyline from an array of LatLng points
              var latlngs = [
                  [35.90525,-79.041189],
                  [35.901426,-79.039644],
                  [35.899271,-79.033413],
                  [35.899271,-79.033413],
                  [35.898923,-79.026082],
                  [35.897602,-79.023336],
                  [35.89343,-79.021705],
                  [35.892596,-79.014409],
                  [35.888842,-79.008051],
                  [35.886895,-79.008566],
                  [35.88467,-79.007193],
                  [35.88161,-79.007021],
                  [35.878828,-79.008223],
                  [35.874238,-79.010798],
                  [35.868952,-79.009425],
                  [35.866309,-79.011828],
                  [35.8645,-79.011485],
                  [35.861718,-79.011485],
                  [35.859631,-79.008051],
                  [35.856849,-79.007536],
                  [35.854066,-79.002043],
                  [35.850588,-79.005991],
                  [35.808341,-78.996427],
                  [35.801798,-79.003637],
                  [35.785567,-79.022617],
                  [35.756597,-79.029483],
                  [35.736057,-79.028036],
                  [35.72017,-79.028036],
                  [35.699164,-79.041254],
                  [35.668908,-79.067689],
                  [35.656634,-79.069064],
                  [35.653286,-79.06769],
                  [35.635456,-79.062852],
                  [35.612572,-79.057187],
                  [35.607967,-79.052552],
                  [35.597499,-79.052895],
                  [35.582123,-79.051325],
                  [35.577655,-79.046518],
                  [35.570255,-79.047033],
                  [35.56048,-79.035017],
                  [35.543331,-79.012701],
                  [35.542353,-78.994848],
                  [35.528049,-78.974876],
                  [35.508349,-78.960113],
                  [35.494331,-78.953194],
                  [35.486504,-78.952336],
                  [35.478956,-78.940491],
                  [35.478956,-78.928131],
                  [35.471267,-78.909077],
                  [35.46929,-78.897453],
                  [35.464536,-78.884235],
                  [35.458804,-78.879429],
                  [35.451812,-78.869644],
                  [35.442163,-78.856598],
                  [35.437548,-78.845096],
                  [35.421484,-78.826358],
                  [35.41337,-78.822925],
                  [35.407354,-78.813998],
                  [35.39812,-78.787906],
                  [35.398259,-78.775546],
                  [35.396582,-78.768884],
                  [35.386647,-78.759957],
                  [35.382588,-78.753949],
                  [35.367471,-78.743993],
                  [35.361032,-78.742963],
                  [35.360192,-78.739358],
                  [35.358652,-78.733178],
                  [35.332967,-78.706077],
                  [35.323583,-78.695434],
                  [35.311286,-78.693306],
                  [35.302881,-78.690044],
                  [35.285368,-78.683178],
                  [35.269575,-78.684564],
                  [35.262427,-78.689714],
                  [35.259904,-78.700185],
                  [35.250652,-78.70173],
                  [35.243503,-78.694692],
                  [35.233969,-78.694578],
                  [35.230884,-78.695093],
                  [35.224013,-78.704534],
                  [35.219806,-78.706079],
                  [35.213495,-78.706079],
                  [35.202739,-78.718729],
                  [35.192639,-78.726454],
                  [35.181976,-78.728686],
                  [35.1744,-78.737097],
                  [35.175522,-78.747912],
                  [35.182958,-78.758383],
                  [35.183941,-78.764219],
                  [35.181275,-78.770571],
                  [35.178447,-78.802976],
                  [35.169007,-78.826587],
                  [35.153149,-78.842895],
                  [35.142271,-78.851521],
                  [35.134129,-78.854439],
                  [35.127952,-78.859246],
                  [35.121213,-78.86079],
                  [35.113911,-78.857357],
                  [35.10067,-78.857872],
                  [35.095614,-78.862679],
                  [35.086624,-78.864739],
                  [35.078336,-78.86285],
                  [35.07089,-78.854954],
                  [35.050135,-78.857235],
                  [35.025561,-78.859105],
                  [35.007565,-78.852754],
                  [34.99572,-78.849753],
                  [34.987986,-78.849753],
                  [34.977296,-78.844604],
                  [34.968435,-78.821429],
                  [34.97708,-78.79488],
                  [34.978065,-78.782005],
                  [34.968922,-78.773079],
                  [34.959918,-78.771362],
                  [34.945989,-78.775825],
                  [34.934426,-78.790073],
                  [34.920774,-78.802948],
                  [34.907402,-78.814964],
                  [34.884833,-78.815517],
                  [34.860408,-78.82623],
                  [34.851252,-78.826745],
                  [34.815723,-78.821065],
                  [34.8122,-78.81643],
                  [34.805575,-78.813168],
                  [34.786311,-78.799391],
                  [34.775596,-78.799906],
                  [34.767558,-78.795443],
                  [34.752045,-78.791233],
                  [34.74598,-78.787629],
                  [34.741043,-78.774926],
                  [34.731169,-78.763253],
                  [34.726958,-78.750166],
                  [34.716658,-78.743128],
                  [34.713695,-78.735575],
                  [34.713554,-78.725791],
                  [34.710449,-78.714633],
                  [34.707486,-78.710684],
                  [34.703252,-78.708796],
                  [34.697889,-78.697123],
                  [34.69803,-78.689913],
                  [34.692949,-78.68442],
                  [34.685997,-78.685533],
                  [34.683032,-78.685018],
                  [34.681903,-78.678667],
                  [34.676962,-78.674719],
                  [34.660867,-78.655149],
                  [34.65409,-78.655149],
                  [34.65649,-78.645536],
                  [34.65183,-78.64073],
                  [34.648726,-78.620613],
                  [34.639264,-78.610141],
                  [34.629235,-78.598812],
                  [34.631213,-78.587997],
                  [34.624998,-78.573234],
                  [34.627823,-78.563278],
                  [34.623585,-78.557784],
                  [34.622455,-78.547313],
                  [34.611887,-78.550827],
                  [34.606518,-78.544132],
                  [34.601007,-78.543102],
                  [34.601573,-78.532802],
                  [34.607931,-78.529713],
                  [34.611887,-78.521644],
                  [34.603975,-78.523533],
                  [34.599312,-78.517696],
                  [34.597334,-78.524734],
                  [34.58942,-78.524391],
                  [34.582354,-78.521473],
                  [34.581624,-78.498373],
                  [34.57272,-78.497858],
                  [34.572296,-78.490476],
                  [34.570034,-78.488073],
                  [34.563532,-78.488073],
                  [34.562825,-78.483953],
                  [34.566359,-78.473653],
                  [34.561835,-78.459405],
                  [34.561977,-78.452711],
                  [34.555332,-78.452539],
                  [34.553353,-78.444643],
                  [34.547431,-78.436187],
                  [34.53725,-78.439277],
                  [34.526644,-78.436702],
                  [34.516885,-78.435844],
                  [34.504647,-78.417406],
                  [34.494319,-78.409166],
                  [34.482293,-78.413114],
                  [34.47618,-78.400285],
                  [34.475048,-78.380544],
                  [34.472076,-78.367154],
                  [34.465849,-78.362176],
                  [34.464576,-78.350675],
                  [34.459339,-78.352563],
                  [34.450704,-78.346383],
                  [34.447732,-78.347241],
                  [34.444476,-78.350503],
                  [34.442069,-78.349816],
                  [34.444476,-78.343465],
                  [34.433345,-78.33558],
                  [34.428814,-78.33558],
                  [34.42485,-78.326825],
                  [34.414937,-78.325452],
                  [34.408706,-78.306913],
                  [34.408423,-78.295411],
                  [34.401624,-78.287858],
                  [34.40474,-78.282193],
                  [34.403486,-78.271722],
                  [34.397537,-78.268804],
                  [34.398529,-78.261422],
                  [34.399945,-78.257303],
                  [34.391305,-78.251123],
                  [34.393854,-78.248376],
                  [34.383371,-78.246145],
                  [34.38068,-78.237218],
                  [34.373737,-78.233957],
                  [34.37898,-78.228978],
                  [34.372003,-78.221203],
                  [34.369028,-78.210217],
                  [34.357975,-78.21056],
                  [34.353157,-78.200089],
                  [34.357408,-78.15889],
                  [34.367469,-78.151307],
                  [34.365486,-78.144269],
                  [34.368036,-78.121095],
                  [34.363927,-78.116632],
                  [34.336149,-78.045017],
                  [34.330337,-78.026821],
                  [34.318295,-78.024787],
                  [34.322974,-78.009853],
                  [34.315885,-78.006763],
                  [34.31149,-78.013457],
                  [34.290572,-78.015131],
                  [34.290147,-78.008093],
                  [34.280928,-78.004831],
                  [34.284474,-77.995733],
                  [34.28107,-77.989896],
                  [34.276956,-77.999853],
                  [34.273694,-78.000883],
                  [34.270147,-77.994531],
                  [34.26887,-77.98921],
                  [34.259348,-77.986537],
                  [34.259774,-77.979327],
                  [34.247855,-77.973147],
                  [34.242463,-77.967654],
                  [34.242179,-77.957011],
                  [34.237496,-77.952376],
                  [34.202347,-77.95767],
                  [34.174445,-77.958512],
                  [34.161946,-77.9604],
                  [34.133708,-77.95293],
                  [34.118076,-77.948639],
                  [34.109691,-77.943832],
                  [34.06918,-77.934694],
                  [34.030944,-77.938718],
                  [33.949672,-77.958159],
                  [33.886139,-78.008025]
                  ];
              var polyline = L.polyline(latlngs, {color: '#170d37'}).addTo(map);
              // zoom the map to the polyline
              map.fitBounds(polyline.getBounds());


});
